{"version":3,"sources":["Listitem.jsx","App.js","reportWebVitals.js","index.js"],"names":["Listitem","props","Listitems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentitem","handelinput","bind","additem","this","setState","Date","now","newItem","newitems","filteredItems","filter","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAkCeA,MA7Bf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OACI,qBAAKC,UAAU,OAAf,SACI,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAASL,EAAKM,KACdC,SAAU,SAACC,GAAMZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAEtD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAC3BU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAVtBJ,EAAKI,QAgBxC,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACKlB,O,eCtBjBmB,IAAQC,IAAIC,K,IA2EGC,E,kDAxEb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAQ,CACXtB,MAAO,GACPuB,YAAa,CACXf,KAAM,GACNF,IAAK,KAGT,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,wDAgBNf,GACViB,KAAKC,SAAS,CACVL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,W,gCAOhB,IAAMC,EAAUJ,KAAKL,MAAMC,YAC3B,GAAoB,KAAjBQ,EAAQvB,KAAY,CACrB,IAAMwB,EAAQ,sBAAOL,KAAKL,MAAMtB,OAAlB,CAAyB+B,IACvCJ,KAAKC,SAAS,CACZ5B,MAAOgC,EACPT,YAAY,CACVf,KAAM,GACNF,IAAK,S,iCAMFA,GACT,IAAM2B,EAAgBN,KAAKL,MAAMtB,MAAMkC,QAAO,SAAAhC,GAAI,OAAIA,EAAKI,MAAOA,KAClEqB,KAAKC,SAAS,CACZ5B,MAAOiC,M,gCAID1B,EAAOD,GACb,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAOD,MAGhBoB,KAAKC,SAAS,CACZ5B,MAAOA,M,+BAIX,OACI,sBAAKG,UAAU,MAAf,UACA,iCACE,sBAAKE,GAAG,aAAR,UACE,uBAAOD,KAAK,OAAO+B,YAAY,cAAc5B,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAYkB,KAAKH,cAClG,wBAAQV,QAASa,KAAKD,QAAtB,sBAGJ,cAAC,EAAD,CAAU1B,MAAS2B,KAAKL,MAAMtB,MAAOe,WAAcY,KAAKZ,WAAYJ,UAAagB,KAAKhB,mB,GApE5EyB,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7a2e417.chunk.js","sourcesContent":["import React from 'react';\nimport './Listitem.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nfunction Listitem(props){\n    const items = props.items;\n    const Listitems = items.map(item => {\n        return(\n            <div className=\"List\" key={item.key}>\n                <p>\n                    <input type=\"text\" \n                    id={item.key} \n                    value = {item.text} \n                    onChange={(e) =>{props.setUpdate(e.target.value, item.key)}}\n                    />\n                    <span>\n                        <FontAwesomeIcon className=\"faicons\" \n                        icon=\"trash\" \n                        onClick={() => props.deleteItem(item.key)}/> \n                    </span>\n                </p>\n            </div>\n        );\n    })\n    return(\n        <div>\n            <FlipMove duration={250} easing=\"ease-in-out\">\n                {Listitems}\n            </FlipMove>\n        </div>\n    );\n}\n\nexport default Listitem;\n","import React from 'react';\nimport './App.css';\nimport Listitem from './Listitem';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash); \n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currentitem: {\n        text: \"\",\n        key: ''\n      }\n    }\n    this.handelinput = this.handelinput.bind(this);\n    this.additem = this.additem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  };\n\n\n  handelinput(e){\n    this.setState({\n        currentitem:{\n          text: e.target.value,\n          key: Date.now()\n        }\n    })\n  };\n\n\n  additem(){\n    const newItem = this.state.currentitem;\n    if(newItem.text !== ''){\n      const newitems = [...this.state.items, newItem];\n      this.setState({\n        items: newitems,\n        currentitem:{\n          text: '',\n          key: ''\n        }\n      })\n    }\n  };\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key !==key);\n    this.setState({\n      items: filteredItems\n    })\n  };\n\n  setUpdate(value, key){\n      const items = this.state.items;\n      items.map(item=>{\n        if(item.key===key){\n          item.text = value;\n        }\n      })\n      this.setState({\n        items: items \n      })\n  }\n  render(){\n    return(\n        <div className=\"App\">\n        <header>\n          <div id=\"to-do-form\">\n            <input type=\"text\" placeholder=\"Add an item\" value={this.state.currentitem.text} onChange = {this.handelinput}/>\n            <button onClick={this.additem}>Add</button>\n          </div>\n        </header>\n        <Listitem items = {this.state.items} deleteItem = {this.deleteItem} setUpdate = {this.setUpdate}/>\n        </div>     \n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}